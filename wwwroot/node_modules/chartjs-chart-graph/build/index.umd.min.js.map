{"version":3,"file":"index.umd.min.js","sources":["../src/elements/EdgeLine.ts","../src/controllers/interpolatePoints.ts","../src/controllers/patchController.ts","../src/controllers/GraphController.ts","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/center.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/constant.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/jiggle.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/collide.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/link.js","../.yarn/cache/d3-quadtree-npm-2.0.0-93642d6b98-e5f9cee19a.zip/node_modules/d3-quadtree/dist/d3-quadtree.js","../.yarn/cache/d3-dispatch-npm-2.0.0-1417ab6cc8-cf473676ae.zip/node_modules/d3-dispatch/dist/d3-dispatch.js","../.yarn/cache/d3-timer-npm-2.0.0-590adf27a0-70733c3baf.zip/node_modules/d3-timer/dist/d3-timer.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/lcg.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/simulation.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/manyBody.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/radial.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/x.js","../.yarn/cache/d3-force-npm-2.1.1-a14e5190d5-aaee5b86d7.zip/node_modules/d3-force/src/y.js","../src/controllers/ForceDirectedGraphController.ts","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/cluster.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/count.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/index.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/tree.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/each.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/find.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/sum.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/sort.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/path.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/descendants.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/leaves.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/links.js","../.yarn/cache/d3-hierarchy-npm-2.0.0-7f20474878-594bea104d.zip/node_modules/d3-hierarchy/src/hierarchy/iterator.js","../src/controllers/DendogramController.ts","../src/controllers/TreeController.ts","../src/index.umd.ts"],"sourcesContent":[null,null,null,null,"export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","// https://d3js.org/d3-quadtree/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction tree_add(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-dispatch/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-timer/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  };\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexports.interval = interval$1;\nexports.now = now;\nexports.timeout = timeout$1;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n",null,"function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n",null,null,null],"names":["horizontal","from","to","options","fx","x","tension","fy","tx","ty","vertical","y","radial","angleHelper","Math","hypot","Number","isNaN","angle","cos","sin","EdgeLine","LineElement","draw","ctx","this","save","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","orientations","layout","_orientation","renderLine","shift","fromX","cpx","cpy","toX","stepped","midpoint","lineTo","bezierCurveTo","source","getProps","target","points","beginPath","moveTo","length","reduce","stroke","directed","s","arrowHeadSize","offset","arrowHeadOffset","translate","rotate","atan2","f","closePath","fillStyle","fill","restore","interpolateNumber","factor","patchController","type","config","controller","elements","scales","registry","addControllers","Array","isArray","addElements","addScales","c","defaults","defaultRoutes","_scriptable","_indexable","name","GraphController","ScatterController","constructor","_onDataPush","args","count","start","getDataset","edges","parsed","_cachedMeta","_parsedEdges","forEach","edge","push","_parseDefinedEdge","_insertEdgeElements","_onDataPop","pop","_scheduleResyncLayout","_onDataShift","_onDataSplice","splice","map","_onDataUnshift","unshift","initialize","_type","defaultConfig","datasets","edgeElementType","getElement","super","enableOptionSharing","parse","meta","data","_data","iScale","vScale","i","index","d","v","_parsed","_sorted","_dataLimitsCached","_parseEdges","reset","resetLayout","update","mode","updateEdgeElements","destroy","prototype","call","_edges","unlistenArrayEvents","_edgeListener","stopLayout","bak","_cachedDataOpts","dataElementType","_sharedOptions","_edgeSharedOptions","nodes","firstOpts","resolveDataElementOptions","sharedOptions","getSharedOptions","includeOptions","xScale","yScale","base","getBasePixel","copyPoint","point","getPixelForValue","properties","p","_source","updateEdgeElement","updateSharedOptions","Object","assign","updateElement","resolveNodeIndex","ref","chart","labels","indexOf","nIndex","console","warn","buildOrUpdateElements","isExtensible","listenArrayEvents","area","chartArea","_ctx","clipArea","unclipArea","elem","_resyncElements","metaEdges","numMeta","numData","getTreeRootIndex","ds","derivedEdges","findIndex","parent","nodeIndices","Set","_","delete","getTreeRoot","getParsed","getTreeChildren","node","filter","metaData","_resyncEdgeElements","_insertElements","_removeElements","reLayout","_scheduleResyncLayoutId","requestAnimationFrame","resyncLayout","merge","clip","animations","fn","t","fromArray","undefined","interpolatorPoint","id","overrides","padding","display","ticks","maxTicksLimit","precision","minRotation","maxRotation","plugins","tooltips","callbacks","label","item","dataIndex","GraphChart","Chart","PointElement","LinearScale","strength","force","n","sx","sy","arguments","random","vx","vy","radius","radii","iterations","tree","xi","yi","ri","ri2","k","quadtree","visitAfter","prepare","visit","apply","quad","x0","y0","x1","y1","rj","r","l","jiggle","sqrt","constant","_nodes","_random","find","nodeById","nodeId","get","Error","links","strengths","distances","bias","link","min","distance","alpha","b","m","Map","initializeStrength","initializeDistance","exports","tree_add","_x","_y","add","cover","xm","ym","xp","yp","right","bottom","j","_root","leaf","_x0","_y0","_x1","_y1","next","addAll","xz","yz","Infinity","tree_cover","floor","z","tree_data","tree_extent","Quad","tree_find","x2","y2","q","x3","y3","quads","dx","dy","d2","tree_remove","retainer","previous","removeAll","remove","tree_root","tree_size","size","tree_visit","callback","child","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","Quadtree","NaN","leaf_copy","copy","treeProto","extent","root","defineProperty","value","factory","noop","dispatch","test","Dispatch","parseTypenames","typenames","types","trim","split","slice","hasOwnProperty","set","concat","on","typename","T","that","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","bind","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","timerFlush","e","wake","nap","poke","t0","t2","t1","sleep","clearTimeout","clearInterval","setInterval","timeout$1","elapsed","stop","interval$1","total","_restart","tick","TypeError","initialAngle","PI","simulation","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","event","lcg","initializeNodes","initializeForce","randomSource","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","radiuses","ForceDirectedGraphController","datasetIndex","_simulation","forceSimulation","_copyPosition","render","sim","fs","center","forceCenter","collide","forceCollide","forceLink","manyBody","forceManyBody","forceX","forceY","forceRadial","keys","key","attr","minmax","acc","_sim","minX","maxX","minY","maxY","POSITIVE_INFINITY","NEGATIVE_INFINITY","rescaleY","skip","simNode","initialIterations","autoRestart","animation","max","ForceDirectedGraphChart","defaultSeparation","a","meanXReduce","maxYReduce","separation","nodeSize","cluster","previousNode","eachAfter","children","meanX","left","leafLeft","leafRight","sum","hierarchy","mapChildren","objectChildren","childs","Node","depth","eachBefore","computeHeight","copyData","height","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","ancestor","TreeNode","A","treeRoot","firstWalk","secondWalk","sizeNode","kx","ky","siblings","executeShifts","vip","vop","vom","sip","sop","som","apportion","each","sort","compare","path","end","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","Symbol","iterator","current","reverse","create","DendogramController","line","orientation","doLayout","newOptions","numbers","DendogramChart","TreeController","TreeChart"],"mappings":"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"}
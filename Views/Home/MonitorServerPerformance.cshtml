 <style>
  .container{
    display:flex;
    vertical-align: middle;
    text-align: center;
  }

  .label{
    flex:1;
    vertical-align: middle;
    text-align: center;
  }

  .x{
    flex:3;
    text-align: center;
    background-color: rgba(235, 113, 101, 0.73);
    margin: 10px;
  }

  .y{
    flex:3;
    text-align: center;
    background-color: rgba(70, 163, 71, 0.64);
    margin-top: 10px;
    margin-bottom:10px;
}
  .z{
    flex:3;
    text-align: center;
    background-color:rgba(70, 140, 215, 0.74) ;
    margin:10px;
  }

  h1{
    text-align: center;
  }

  </style>  

  <div id="labelAccel" class="label">
    <h2>Real Time Performance</h2> 
  </div>
  <div id="idcontents">
      <h6 id="machineid"></h6> 
      <div id="perfContainer" class="container">                                              
          <div id="divcpu" class="x">
            <h4> CPU </h4>
            <canvas id="divcpuChart"></canvas>
          </div>
          <div id="divmemory" class="y">
            <h4> Memory </h4>
            <canvas id="divmemoryChart"></canvas>
          </div>
          <div id="divdisk" class="z">
            <h4> Disk </h4>
            <canvas id="divdiskChart"></canvas>
          </div>
          <div id="divnetwork" class="z">
            <h4> Network </h4>
            <canvas id="divnetworkChart"></canvas>
          </div>
        </div>
  </div>
  @* <div id="perfContainer" class="container">
    <h1 id="machineid">@ip@</h1>       
    <div id="divcpu" class="x">
      <h4> CPU </h4>
      <canvas id="divcpuChart"></canvas>
    </div>
    <div id="divmemory" class="y">
      <h4> Memory </h4>
      <canvas id="divmemoryChart"></canvas>
    </div>
    <div id="divdisk" class="z">
      <h4> Disk </h4>
      <canvas id="divdiskChart"></canvas>
    </div>
     <div id="divnetwork" class="z">
      <h4> Network </h4>
      <canvas id="divnetworkChart"></canvas>
    </div>
  </div> *@
  

  

<script>
  window.onload = function() {
    console.log("LOADED");

    //Configuration variables
    var updateInterval = 1000 //in ms
    var numberElements = 30;

    //Globals
    var updateCount = 0;

    // Chart Objects
    var divcpuChart = $("#divcpuChart");
    var divmemoryChart = $("#divmemoryChart");
    var divdiskChart = $("#divdiskChart");
    var divnetworkChart = $("#divnetworkChart");
    //chart instances & configuration


    var commonOptions = {
        scales: {
          xAxes: [{
            type: 'time',
            time: {
              displayFormats: {
                millisecond: 'mm:ss:SSS'
              }
            }
          }],
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]            
        },
        legend: {display: false},
        tooltips:{
          enabled: false
        }
    };

    //var ctx = document.getElementById('myChart').getContext('2d');
    //var myChart = new Chart(ctx,config);

    var divcpuChartInstance = new Chart(divcpuChart, {
        type: 'line',
        data: {
          datasets: [{
              label: "% Utilization",
              data: 0,
              fill: false,
              borderColor: '#343e9a',
              borderWidth: 1
          }]
        },
        options: Object.assign({}, commonOptions, {
          title:{
            display: true,
            text: "% Utilization",
            fontSize: 18
          }
        })
    });

    var divmemoryChartInstance = new Chart(divmemoryChart, {
        type: 'line',
        data: {
          datasets: [{
              label: "% Utilization",
              data: 0,
              fill: false,
              borderColor: '#343e9a',
              borderWidth: 1
          }]
        },
        options: Object.assign({}, commonOptions, {
          title:{
            display: true,
            text: "% Utilization",
            fontSize: 18
          }
        })    });

    var divdiskChartInstance = new Chart(divdiskChart, {
        type: 'line',
        data: {
          datasets: [{
              label: "% Utilization",
              data: 0,
              fill: false,
              borderColor: '#343e9a',
              borderWidth: 1
          }]
        },
        options: Object.assign({}, commonOptions, {
          title:{
            display: true,
            text: "% Utilization",
            fontSize: 18
          }
        })
      });

   var divnetworkChartInstance = new Chart(divnetworkChart, {
        type: 'line',
        data: {
          datasets: [{
              label: "% Utilization",
              data: 0,
              fill: false,
              borderColor: '#343e9a',
              borderWidth: 1
          }]
        },
        options: Object.assign({}, commonOptions, {
          title:{
            display: true,
            text: "% Utilization",
            fontSize: 18
          }
        })
      });

    function addData(data) {
      if(data){
        const d = new Date();
        let time = d.getHours()+':'+d.getMinutes()+':'+d.getSeconds();
        $('#machineid').html("Server: "+data['machinename'])
        divcpuChartInstance.config.data.labels.push(time);
        divcpuChartInstance.config.data.datasets.forEach((dataset) =>{dataset.data.push(data['cpu'])});
        divmemoryChartInstance.config.data.labels.push(time);
        divmemoryChartInstance.config.data.datasets.forEach((dataset) =>{dataset.data.push(data['memory'])});
        divdiskChartInstance.config.data.labels.push(time);
        divdiskChartInstance.config.data.datasets.forEach((dataset) =>{dataset.data.push(data['disk'])});
        divnetworkChartInstance.config.data.labels.push(time);
        divnetworkChartInstance.config.data.datasets.forEach((dataset) =>{dataset.data.push(data['network'])});
        

        divcpuChartInstance.update();
        divmemoryChartInstance.update();
        divdiskChartInstance.update();
        divnetworkChartInstance.update();

        if(updateCount > numberElements){
          divcpuChartInstance.config.data.labels.shift();
          divcpuChartInstance.config.data.datasets[0].data.shift();
          divmemoryChartInstance.config.data.labels.shift();
          divmemoryChartInstance.config.data.datasets[0].data.shift();
          divdiskChartInstance.config.data.labels.shift();
          divdiskChartInstance.config.data.datasets[0].data.shift();   
          divnetworkChartInstance.config.data.labels.shift();
          divnetworkChartInstance.config.data.datasets[0].data.shift();       
        }
        else updateCount++;       
      }
    };
    var i=0;
    function updateData() {
      console.log("Update Data");
      i=i+1;
       $.ajax({
                url: '/Home/GetServerPerfData?pageno='+i,
                type: 'GET', 
                data:  '{pageno:"'+i+'"}',   
                dataType: 'json',
                contentType: 'application/json',
                success: function (icpdata) { 
                  if(icpdata!='undefined'){
                    icpdata.forEach(obj => {
                        addData(obj);
                    })
                  }               
                }
              });
      setTimeout(updateData,updateInterval);
    }

    updateData();
  }
</script>